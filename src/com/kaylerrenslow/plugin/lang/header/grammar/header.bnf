{
  parserClass="com.kaylerrenslow.plugin.lang.header.parser.HeaderParser"

  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiClassPrefix="Header"
  psiImplClassSuffix="Impl"
  psiPackage="com.kaylerrenslow.plugin.lang.header.psi"
  psiImplPackage="com.kaylerrenslow.plugin.lang.header.psi.impl" //comment out the import statement in the HeaderTypes class if the impl package isn't used

  elementTypeHolderClass="com.kaylerrenslow.plugin.lang.header.psi.HeaderTypes"
  elementTypeClass="com.kaylerrenslow.plugin.lang.header.psi.HeaderElementType"
  tokenTypeClass="com.kaylerrenslow.plugin.lang.header.psi.HeaderTokenType"

  psiImplUtilClass="com.kaylerrenslow.plugin.lang.header.psi.helpers.PSIHeaderImplUtil"
}
// @formatter:off
headerFile ::= item_*

//TODO when $ is typed, look into stringtable.xml (try using annotator)
//TODO add in \ lexer rule that is a waiting value just like in the properties custom language demo. This will work for any assignment
//TODO maybe use annotator for SQF config retrieval (config >> "var"). check if the PsiFile is over HeaderFile so you can't annotate in any other language
private item_ ::= COMMENT | statement | preprocessor | WHITE_SPACE | BAD_CHARACTER

statement ::= (assignment | classDeclaration) SEMICOLON

number ::= NUMBER_LITERAL | HEX_LITERAL
value ::= STRING_LITERAL | number | CONSTANT | IDENTIFIER

array ::= LBRACE RBRACE | LBRACE (mathExp | value | array)(COMMA (mathExp | value | array))* RBRACE

assignmentIdentifier ::= IDENTIFIER /*| NUM_IDENTIFIER*/

assignment ::= basicAssignment | arrayAssignment
basicAssignment ::= assignmentIdentifier EQ (mathExp | value )
arrayAssignment ::= assignmentIdentifier BRACKET_PAIR EQ array

mathExp ::= term_ ((PLUS | MINUS) term_)*

private term_ ::= factor_ ((ASTERISK | FSLASH) factor_)*

private factor_ ::= PLUS factor_
		 		  | MINUS factor_
				  | primary_

private primary_ ::= number
				   | IDENTIFIER
				   | LPAREN mathExp RPAREN


classDeclaration ::= CLASS IDENTIFIER (COLON IDENTIFIER)? (LBRACE (item_)* RBRACE)?

//Preprocessor things
preprocessor ::= pre_include //| pre_define_//TODO

pre_include ::= PREPROCESS_INCLUDE (STRING_LITERAL | INCLUDE_VALUE_ANGBR) //TODO does include or other preprocessor commands allow multilines? (https://community.bistudio.com/wiki/PreProcessor_Commands#Multi-line
//private pre_define_ ::= PREPROCESS_DEFINE